plugins {
    id 'java'
    id 'idea'
    id 'org.graalvm.buildtools.native' version '0.10.1'
}

def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)

group = 'org.racingarena.client'
version = '1.0'
//Defines 'extra' (custom) properties for all projects
ext {
    appName = "Racing Arena"
    //Versions of the libGDX dependencies (used further below on those 'compile' lines)
    gdxVersion = '1.12.1'
    gdxSvmHelperVersion = '2.0.1'
}

idea {
    module {
        downloadJavadoc = true
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'org.racingarena.client.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

graalvmNative {
    binaries {
        main {
            mainClass = 'org.racingarena.client.Main'
            buildArgs.add('-H:IncludeResources=\".*/*.fnt|.*/*.png|.*/*.atlas|.*/*.json\"')
            if (osName.contains('windows')) {
                buildArgs.addAll(
                        '-H:NativeLinkerOption=/SUBSYSTEM:WINDOWS',
                        '-H:NativeLinkerOption=/ENTRY:mainCRTStartup'
                )
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    implementation group: 'org.json', name: 'json', version: '20240303'
    implementation "io.github.berstanio:gdx-svmhelper:$gdxSvmHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-backend-lwjgl3:$gdxSvmHelperVersion"
}